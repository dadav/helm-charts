namespace: &namespace policy-hub

# Default annotation settings. These will overwrite the individual settings in the Policy
# and are used by all policies that are defined here.
# policyDefaults:
    # A security control category represent specific requirements
    # for one or more standards. For example, a System and Information Integrity category
    # might indicate that your policy contains a data transfer protocol
    # to protect personal information, as required by the HIPAA and PCI standards.
    #
    # Optional
    # Default: empty
#    categories:
#      - CM Configuration Management
    # A security control category represent specific requirements
    # for one or more standards. For example, a System and Information Integrity category
    # might indicate that your policy contains a data transfer protocol
    # to protect personal information, as required by the HIPAA and PCI standards.
    #
    # Optional
    # Default: empty
#    controls:
#      - CM Console Customizations
    # The name or names of security standards the policy is related to.
    # For example, National Institute of Standards and Technology (NIST)
    # and Payment Card Industry (PCI).
    #
    # Optional
    # Default: empty
#    standards:
#      - Baseline 2023v1

    # Description of the policy. Simply adds an annotation.
    #
    # Optional
    # Default: empty
#    description: "Console Customizations"

    # Specifies the remediation of your policy. The parameter values are
    # Overrides other remediationAction settings!!
    #
    # Optional
    # Values:
    #   - inform
    #   - enforce
#    globalRemediationAction: inform

    # Globally activate the policy-template name randomizer. It will add an alpha-nummeric string
    # to the policy-templates.
    # This is required if there are multiple policy-templates in one policy
    #
    # Optional:
    # Default: empty
#    randomizer: "true"

# The policy set controller aggregates the policy status scoped to policies that are defined in the same namespace.
policySet:
  # Enable of disable policySets.
  # If disabled, the PlaceMentBinding will use the name of the policy
  enabled: true
  sets:
      # The name for identifying the policySet resource.
    - name: console-customizations
      description: "Contains console customizations"
      namespace: *namespace

      # The list of policies that you want to group together in the policy set.
      #
      # Optional:
      # If defined, it will take the list. If Not defined it will automatically take the names
      # of the policies defined below.
      policies:
        - console-banner

policies:
    # The name for identifying the policy resource.
  - policyname: console-banner
    # Namespace of the policy, must exist!
    namespace: *namespace

    # The disabled parameter provides the ability to enable and
    # disable your policies
    #
    # Set the value to true or false
    # Default: true (explicitly set the value to false to activate the policy)
    disabled: 'false'
    # Specifies the remediation of your policy. The parameter values are
    # enforce and inform. If specified, the spec.remediationAction
    # value that is defined overrides any remediationAction
    # parameter defined in the child policies in the policy-templates
    # section. For example, if the spec.remediationAction value
    # is set to enforce, then the remediationAction in the
    # policy-templates section is set to enforce during runtime.
    # Important: Some policy kinds might not support the enforce feature.
    #
    # Optional
    # Values:
    #   - inform
    #   - enforce
    remediationAction: inform

    policy_templates:
      - name: console-banner
        # Path the Kubernetes objects in yaml format. (They must be fully defined)
        path: "console-banner"

        # Activate the policy-template name randomizer for this template.
        # It will add an alpha-nummeric string to the policy-templates.
        # This is required if there are multiple policy-templates in one policy
        #
        # Optional:
        # Default: empty
        # randomizer: "true"

        # Specifies the action to take when the policy is non-compliant. Use
        # the following parameter values:
        #   - inform
        #   - InformOnly
        #   - enforce
        #
        # Default: inform
        # Important: the policy-template.spec.remediationAction is overridden by the
        # preceding parameter value for spec.remediationAction (if defined)
        remediationAction: enforce
        # Used to define the desired state of the Kubernetes object on the
        # managed clusters. You must use one of the following verbs as the parameter value:
        # mustonlyhave: Indicates that an object must exist with the exact fields and values as
        #               defined in the objectDefinition.
        # musthave: Indicates an object must exist with the same fields as specified in the objectDefinition.
        #           Any existing fields on the object that are not specified in the object-template
        #           are ignored. In general, array values are appended. The exception for the array to be
        #           patched is when the item contains a name key with a value that matches an existing item. Use a
        #           fully defined objectDefinition using the mustonlyhave compliance type, if you want to
        #           replace the array.
        # mustnothave: Indicates that an object with the same fields as specified in the objectDefinition
        #              cannot exist.
        complianceType: musthave
        # Specifies the severity when the policy is non-compliant. Use the
        # following parameter values: low, medium, high, or critical.
        #
        # Default: low
        severity: low
        # Determines whether to clean up resources related to the policy
        # when the policy is removed from a managed cluster.
        #
        # Values:
        #    - DeleteIfCreated: Cleans up any resources created by the policy.
        #    - DeleteAll: Cleans up all resources managed by the policy.
        #    - None: This is the default value and maintains the same behavior
        #            from previous releases, where no related resources are deleted.
        pruneObjectBehavior: "DeleteIfCreated"
        # evaluationInterval:
        # Used to define how often the policy is evaluated when it is in the compliant state.
        # The values must be in the format of a duration which is a sequence of numbers
        # with time unit suffixes. For example, 12h30m5s represents 12 hours, 30 minutes, and 5
        # seconds. It can also be set to never so that the policy is not reevaluated on the compliant
        # cluster, unless the policy spec is updated.
        # By default, the minimum time between evaluations for configuration policies is
        # approximately 10 seconds. (This can be longer if the configuration policy
        # controller is saturated on the managed cluster.)
        # Optional
        #   compliant: 45m
        #   noncompliant: 45s
        # For policy templates, this is used to create a list of dependency
        # objects detailed with extra considerations for compliance.
        # extraDependencies:
        #   # The name of the object being depended on.
        #  - name: ""
        #    # The namespace of the object being depended on. The default is
        #    # the namespace of policies set for the Policy Generator.
        #    namespace: ""
        #    # The compliance state the object needs to be in. The default value is Compliant.
        #    compliance: "Compliant"
        #    # The kind of the object. By default, the kind is set to Policy, but can
        #    # also be other kinds that have compliance state, such as ConfigurationPolicy.
        #    kind: "Policy"
        #    # The API version of the object. The default value is policy.opencluster-management.io/v1
        #    apiVersion: "policy.open-cluster-management.io/v1"

        # Determines the list of namespaces to check on the cluster for the given manifest. If a namespace is
        # specified in the manifest, the selector is not necessary. This defaults to no selectors.
        # namespaceSelector:
        #   include: []
        #   exclude: []
        #   matchExpressions:
        #    - key: name
        #      operator: In
        #      values:
        #        - local-cluster
        #   matchLabels:
        #     component: redis
        #     env: test

    # Places a policy to a cluster with selected labels and or clusterSet
    placement:
      # a clusterSet the policy to bind to. The clusterSet must exist.
      # Optional
      # clusterSets:
      #   - hub

      # required cluster selectors
      # Selects a cluster based on its labels. For example: name euqals to "local-cluster"

      # multiple selectors can be defined, which must all be true
      lableSelectors:
        - key: name
          operator: In
          values:
            - local-cluster

    # Description of the policy. Simply adds an annotation.
    #
    # Optional
    # Default: empty
    # description: ''

    # A security control category represent specific requirements
    # for one or more standards. For example, a System and Information Integrity category
    # might indicate that your policy contains a data transfer protocol
    # to protect personal information, as required by the HIPAA and PCI standards.
    #
    # Optional
    # Default: empty
    categories:
      - CM Configuration Management

    # The name of the security control that is being checked. For
    # example, Access Control or System and Information Integrity.
    #
    # Optional
    # Default: empty
    controls:
      - CM Console Customizations

    # The name or names of security standards the policy is related to.
    # For example, National Institute of Standards and Technology (NIST)
    # and Payment Card Industry (PCI).
    #
    # Optional
    # Default: empty
    standards:
      - Baseline 2023v1
    # Dependencies are used to create a list of dependency objects detailed with
    # extra considerations for compliance.
    # dependencies:
    #   # The name of the object being depended on.
    #    - name: ""
    #     # The namespace of the object being depended on. The default is
    #     # the namespace of policies set for the Policy Generator.
    #      namespace: ""
    #     # The compliance state the object needs to be in. The default value is Compliant.
    #     compliance: "Compliant"
    #     # The kind of the object. By default, the kind is set to Policy, but can
    #     # also be other kinds that have compliance state, such as ConfigurationPolicy.
    #     kind: "Policy"
    #     # The API version of the object. The default value is policy.opencluster-management.io/v1
    #     apiVersion: "policy.open-cluster-management.io/v1"
    # Used to mark a policy template as compliant until the dependency
    # criteria is verified.
    #
    # Optional
    # Values:
    #   - true
    #   - false
    # Default: empty
    ignorePending: false

  # 2nd Example of a policy
  # - policyname: console-links
  #   disabled: 'false'
  #   remediationAction: inform
  #   policy_templates:
  #     - name: console-links
  #       path: "console-links"

  #   placement:
  #     lableSelectors:
  #       - key: name
  #         operator: In
  #         values:
  #           - local-cluster
