---
namespace: &namespace openshift-netobserv-operator
bucketname: &bucketname netobserv-bucket
lokisecret: &loki-secret-name netobserv-loki-s3
storageclassname: &storageclassname netobserv-bucket-storage-class

# Network Observability settings.
netobserv:
  # -- Enable Network Observability configuration?
  # This will also create the reader/writer rolebanding for multi-tenancy
  # @default -- false
  enabled: true

  # -- Namespace where Network Observability FlowCollector shall be installed.
  # @default -- ''
  namespace:
    name: *namespace

  # -- Syncwave for the FlowCollector resource.
  # @default -- 10
  syncwave: 10

  # -- Name of the LokiStack resource.
  # @default -- netobserv-loki
  lokistack_name: netobserv-loki

# A helper chart that simply creates another backingstore for quay.
# This is a chart in a very early state, and not everything can be customized for now.
# It will create the objects:
#  - BackingStore
#  - BackingClass
#  - StorageClass

# NOTE: Currently only PV type is supported
# @ ignore
helper-objectstore:
  enabled: false
  # syncwave: 1

  # Name of the BackingStore
  backingstore_name: netobserv-backingstore
  # Size of the BackingStore
  backingstore_size: 100Gi
  # numOfVolumes: 1
  # type: py-pool

  # The StorageClass the BackingStore is based on
  baseStorageClass: gp3-csi

  # Name of the StorageClass that shall be enabled.
  storageclass_name: *storageclassname

  # Bucket that shall be created
  bucket:
    enabled: false
    name: *bucketname
    namespace: *namespace

    # is_secure: true
    # port: 443

    # Name of the storageclass
    # Default: openshift-storage.noobaa.io
    # a separate StorageClass with BackingStore and BackingClass can be created.
    storageclass: *storageclassname

    # Syncwave for bucketclaim creation. This should be done very early, but it depends on ODF.
    # Default: 2
    syncwave: 2

# SubChart to create the loki secret if required.
# The Secret must contain all required bucket information, while ODF creates a secret and a configmap for example.
# A Kubernetes Job is created, that reads the data from the Secret and ConfigMap and creates a new secret for loki.
# @ ignore
helper-loki-bucket-secret:
  # Enable Job creation
  enabled: false

  # Syncwave ... best to do after bucket creation
  syncwave: 2

  # Namespace for logging
  namespace: *namespace

  # Secretname that shall be created
  secretname: *loki-secret-name

  # Name of the bucket
  bucket:
    name: *bucketname

# The operators are installed in a separate way in this case.
# sub subchart
# @ ignore
helper-operator:

  operators:
    netobserv-operator:
      enabled: false
      syncwave: '0'
      namespace:
        name: *namespace
        create: false
      subscription:
        channel: stable
        source: redhat-operators
        approval: Automatic
        operatorName: netobserv-operator
        sourceNamespace: openshift-marketplace
      operatorgroup:
        create: false
        notownnamespace: true
