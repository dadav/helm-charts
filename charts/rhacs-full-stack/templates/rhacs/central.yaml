{{ if eq (.Values.rhacs.central.enabled | toString) "true" }}
apiVersion: platform.stackrox.io/v1alpha1
kind: Central
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: {{ .Values.rhacs.central.syncwave | quote }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: central
  namespace: {{ .Values.rhacs.namespace.name | quote }}
  labels:
    {{- include "rhacs.labels" $ | nindent 4 }}
spec:
  central:
    exposure:
      loadBalancer:
        enabled: false
        port: 443
      nodePort:
        enabled: false
      route:
        {{- if .Values.rhacs.central.hostname }}
        host: {{ .Values.rhacs.central.hostname }}
        {{- end }}
        enabled: true
    {{- if .Values.rhacs.central.defaultssl }}
    defaultTLSSecret:
      name: {{ .Values.rhacs.central.defaultssl }}
    {{- end }}
    persistence:
      persistentVolumeClaim:
        claimName: {{ .Values.rhacs.central.pvc | quote }}

    {{- if .Values.rhacs.central.resources }}
    {{- with .Values.rhacs.central }}
    resources:
      {{- if .resources.requests }}
      requests:
        cpu: {{ .resources.requests.cpu }}
        memory: {{ .resources.requests.memory }}
      {{- end }}
      {{- if .resources.limits }}
      limits:
        cpu: {{ .resources.limits.cpu  }}
        memory: {{ .resources.limits.memory }}
      {{- end }}
    {{- end }}
    {{- end }}

    {{- if .Values.rhacs.central.db }}
    {{- with .Values.rhacs.central.db }}
    db:
      isEnabled: Default
      {{- if .resources }}
      resources:
        {{- if .resources.requests }}
        requests:
          cpu: {{ .resources.requests.cpu }}
          memory: {{ .resources.requests.memory }}
        {{- end }}
        {{- if .resources.limits }}
        limits:
          cpu: {{ .resources.limits.cpu  }}
          memory: {{ .resources.limits.memory }}
        {{- end }}
      {{- end }}
      {{- if .tolerations }}
      {{- range $key, $value := .tolerations }}
      tolerations:
        - effect: {{ $value.effect }}
          key: {{ $value.key }}
          operator: {{ $value.operator }}
          value: {{ $value.value }}
      {{- end }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- if .Values.rhacs.central.tolerations }}
    {{- range $key, $value := .Values.rhacs.central.tolerations }}
    tolerations:
      - effect: {{ $value.effect }}
        key: {{ $value.key }}
        operator: {{ $value.operator }}
        value: {{ $value.value }}
    {{- end }}
    {{- end }}
  egress:
    connectivityPolicy: {{ .Values.rhacs.central.egress.connectivityPolicy }}

  scanner:
    {{- if .Values.rhacs.scanner.analyzer }}
    analyzer:
      {{- if .Values.rhacs.scanner.analyzer.autoscaling }}
      scaling:
        # default: enabled, max 5, min 2, replicas 3
        autoScaling: {{ .Values.rhacs.scanner.analyzer.autoscaling.status | default "Enabled" }}
        maxReplicas: {{ .Values.rhacs.scanner.analyzer.autoscaling.max | default "5" }}
        minReplicas: {{ .Values.rhacs.scanner.analyzer.autoscaling.min | default "2" }}
        replicas: {{ .Values.rhacs.scanner.analyzer.autoscaling.replicas | default "3"}}
      {{- end }}

      {{- if .Values.rhacs.scanner.analyzer.tolerations }}
      tolerations:
        {{- range $key, $value := .Values.rhacs.scanner.analyzer.tolerations }}
        - effect: {{ $value.effect }}
          key: {{ $value.key }}
          operator: {{ $value.operator }}
          value: {{ $value.value }}
        {{- end }}
      {{- end }}

      {{- if .Values.rhacs.scanner.analyzer.resources }}
      {{- with .Values.rhacs.scanner.analyzer }}
      resources:

        {{- if .resources.requests }}
        requests:
          {{- if .resources.requests.cpu }}
          cpu: {{ .resources.requests.cpu }}
          {{- end }}
          {{- if .resources.requests.memory }}
          memory: {{ .resources.requests.memory }}
          {{- end }}
          {{- if index .resources.requests "ephemeral-storage" }}
          ephemeral-storage: {{ index .resources.requests "ephemeral-storage" }}
          {{- end }}
        {{- end }}

        {{- if .resources.limits }}
        limits:
          {{- if .resources.limits.cpu }}
          cpu: {{ .resources.limits.cpu }}
          {{- end }}
          {{- if .resources.limits.memory }}
          memory: {{ .resources.limits.memory }}
          {{- end }}
          {{- if index .resources.requests "ephemeral-storage" }}
          ephemeral-storage: {{ index .resources.limits "ephemeral-storage" }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}
    {{- end }}

    {{- if .Values.rhacs.scanner.db }}
    db:
      {{- if .Values.rhacs.scanner.db.resources }}
      {{- with .Values.rhacs.scanner.db }}
      resources:
        {{- if .resources.requests }}
        requests:
          {{- if .resources.requests.cpu }}
          cpu: {{ .resources.requests.cpu }}
          {{- end }}
          {{- if .resources.requests.memory }}
          memory: {{ .resources.requests.memory }}
          {{- end }}
        {{- end }}
        {{- if .resources.limits }}
        limits:
          {{- if .resources.limits.cpu }}
          cpu: {{ .resources.limits.cpu }}
          {{- end }}
          {{- if .resources.limits.memory }}
          memory: {{ .resources.limits.memory }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}

      {{- if .Values.rhacs.scanner.db.tolerations }}
      tolerations:
        {{- range $key, $value := .Values.rhacs.scanner.db.tolerations }}
        - effect: {{ $value.effect }}
          key: {{ $value.key }}
          operator: {{ $value.operator }}
          value: {{ $value.value }}
        {{- end }}
      {{- end }}
    {{- end }}
    scannerComponent: Enabled
{{- end }}
